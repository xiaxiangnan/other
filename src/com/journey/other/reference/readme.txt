四个级别引用:
1. 强引用: 最普遍的引用,可以直接访问目标对象,任何时候都不会被系统回收,即使抛出oom

2. 软引用(SoftReference): 除了强引用外最强的引用类型.不会被jvm很快回收,只有当堆使用率临近阀值时候才会回收.
软引用可用来实现内存敏感的高速缓存.软引用可以和一个引用队列（ReferenceQueue）联合使用，
如果软引用所引用的对象被垃圾回收器回收，Java虚拟机就会把这个软引用加入到与之关联的引用队列中

3. 弱引用(WeakReference): 弱引用与软引用的区别在于：只具有弱引用的对象拥有更短暂的生命周期。
在垃圾回收器线程扫描它所管辖的内存区域的过程中，一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，
都会回收它的内存。不过，由于垃圾回收器是一个优先级很低的线程，因此不一定会很快发现那些只具有弱引用的对象。
可用来实现内存非敏感的高速缓存.
弱引用可以和一个引用队列（ReferenceQueue）联合使用，如果弱引用所引用的对象被垃圾回收，
Java虚拟机就会把这个弱引用加入到与之关联的引用队列中。

4. 虚引用(PhantomReference): 顾名思义,就是形同虚设，与其他几种引用都不同，虚引用并不会决定对象的生命周期。
如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收。
虚引用主要用来跟踪对象被垃圾回收器回收的活动。
